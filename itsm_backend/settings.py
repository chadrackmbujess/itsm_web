"""
Django settings for itsm_backend project.

Generated by 'django-admin startproject' using Django 4.2.18.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-nue8-rp-3asfx4!!z-c2jq@a+zu5^npf1-rj*8+7fvlo^3tp%c'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    #'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Ajout des applications
    'rest_framework',
    'rest_framework_simplejwt',
    'core',  # Notre application principale
    'corsheaders',  # CORS avec Kivy
    'rest_framework_simplejwt.token_blacklist',
    'django_plotly_dash',
    'material',
    'material.admin',

]

CRON_CLASSES = [
    "core.cron.ScheduleMaintenanceCronJob",
]

# Configuration de Django REST Framework
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

# Configuration de JWT
from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=2),  # Durée de validité du token
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),  # Durée de validité du refresh token
    'ROTATE_REFRESH_TOKENS': True,   # Générer un nouveau refresh token à chaque rafraîchissement
    'BLACKLIST_AFTER_ROTATION': True,  # Ajouter l'ancien refresh token à la liste noire
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': 'django-insecure-nue8-rp-3asfx4!!z-c2jq@a+zu5^npf1-rj*8+7fvlo^3tp%c',  # Remplace par une clé secrète forte
    'AUTH_HEADER_TYPES': ('Bearer',),
    'UPDATE_LAST_LOGIN': True,                    # Mettre à jour la date de dernière connexion
}

AUTH_USER_MODEL = 'core.CustomUser'


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # Ajout corsheaders
    'django_plotly_dash.middleware.BaseMiddleware', # pour le dashbord
]
CORS_ALLOW_ALL_ORIGINS = True

ROOT_URLCONF = 'itsm_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'itsm_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'fr'

TIME_ZONE = 'Africa/Kinshasa'

USE_I18N = True

USE_TZ = True

# email

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # Remplacez par le serveur SMTP que vous utilisez
EMAIL_PORT = 587  # Utilisez 465 pour SSL
EMAIL_USE_TLS = True  # Utilisez True pour TLS ou False pour SSL
EMAIL_USE_SSL = False  # Utilisez True pour SSL
EMAIL_HOST_USER = 'chadrackmbujess@gmail.com'
EMAIL_HOST_PASSWORD = 'hptb jdga ptuj vlfq'
#DEFAULT_FROM_EMAIL = 'chadrackmbupioka@gmail.com'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


MATERIAL_ADMIN_SITE = {
    'HEADER': 'Portfolio Chadrack Mbu Jess - Connexion Admin',  # Texte de l'en-tête
    'TITLE': 'MBU',  # Titre de l'administration
    'FAVICON': 'images/logo-chadrackmbujess.ico',  # Chemin vers une icône favicon (optionnel)
   # 'MAIN_BG_COLOR': '#3f51b5',  # Couleur de fond principale (optionnel)
    #'MAIN_HOVER_COLOR': '#303f9f',  # Couleur de survol principale (optionnel)
    'PROFILE_PICTURE': 'images/profil1.jpg',  # Photo de profil (optionnel)
    #'PROFILE_BG': 'images/profile-bg.jpg',  # Image de fond du profil (optionnel)
    'LOGIN_LOGO': 'images/logo-chadrackmbujess.png',  # Logo sur la page de connexion (optionnel)
    #'LOGOUT_BG': 'images/logo-chadrackmbujess.png',  # Image de fond sur la page de déconnexion (optionnel)
}